# -*- coding: utf-8 -*-
"""
Created on: 21.07.25 18:02
@author: Dmytro Nikolaenko (nikodim74@gmail.com)
@user: d.nikolaenko
@project name: Python3_courses_homework
@file: telbook_new.py
"""

"""
–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–∫–∞ ¬´–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞ –∫–Ω–∏–≥–∞¬ª:

–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ 
–ü–æ—à—É–∫ –∑–∞ —ñ–º–µ–Ω–µ–º 
–ü–æ—à—É–∫ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º 
–ü–æ—à—É–∫ –∑–∞ –ø–æ–≤–Ω–∏–º —ñ–º'—è–º
–ü–æ—à—É–∫ –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É
–ü–æ—à—É–∫ –∑–∞ –º—ñ—Å—Ç–æ–º –∞–±–æ —à—Ç–∞—Ç–æ–º
–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
–û–ø—Ü—ñ—è –≤–∏—Ö–æ–¥—É –∑ –ø—Ä–æ–≥—Ä–∞–º–∏

–ü–µ—Ä—à–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–æ–≥—Ä–∞–º–∏ –º–∞—î –±—É—Ç–∏ –Ω–∞–∑–≤–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏, —è–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç –ø—É—Å—Ç–∏–π —Ç–æ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ñ–∞–π–ª noname.json,
–ø—ñ—Å–ª—è —á–æ–≥–æ –ø–æ–≤–∏–Ω–Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ JSON, —è–∫—â–æ —Ñ–∞–π–ª –ø—É—Å—Ç–∏–π —Ç–æ–ø–æ–ø–µ—Ä–µ–¥–∏—Ç–∏ –ø—Ä–æ —Ü–µ. –ü—ñ—Å–ª—è –≤–∏—Ö–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—Å—ñ –¥–∞–Ω—ñ
–ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–º—É JSON.
"""

import json
import os
from typing import Dict, List, Optional


class PhoneBook:
    def __init__(self, filename: str = "noname.json"):
        self.filename = filename
        self.contacts = self._load_phone_book()

    def _load_phone_book(self) -> List[Dict]:
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É –∑ JSON —Ñ–∞–π–ª—É –∞–±–æ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤—É, —è–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π."""
        try:
            if os.path.exists(self.filename):
                with open(self.filename, 'r', encoding='utf-8') as file:
                    data = json.load(file)
                    if not data:
                        print("‚ÑπÔ∏è –§–∞–π–ª —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π. –ü–æ—á–Ω–µ–º–æ –∑ —á–∏—Å—Ç–æ—ó –∫–Ω–∏–≥–∏.")
                    return data
            else:
                print(f"‚ÑπÔ∏è –§–∞–π–ª '{self.filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É.")
                return []
        except json.JSONDecodeError:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É '{self.filename}'. –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É.")
            return []

    def save_phone_book(self):
        """–ó–±–µ—Ä—ñ–≥–∞—î —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É —É JSON —Ñ–∞–π–ª."""
        with open(self.filename, 'w', encoding='utf-8') as file:
            json.dump(self.contacts, file, ensure_ascii=False, indent=4)

    def add_contact(self):
        """–î–æ–¥–∞—î –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏."""
        print("\n" + "‚ûï –î–û–î–ê–í–ê–ù–ù–Ø –ù–û–í–û–ì–û –ö–û–ù–¢–ê–ö–¢–£ " + "‚Äï" * 20)
        contact = {
            'first_name': input("‚îÇ –Ü–º'—è: ").strip(),
            'last_name': input("‚îÇ –ü—Ä—ñ–∑–≤–∏—â–µ: ").strip(),
            'full_name': "",
            'phone': input("‚îÇ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ").strip(),
            'city': input("‚îÇ –ú—ñ—Å—Ç–æ: ").strip(),
            'state': input("‚îÇ –®—Ç–∞—Ç/–æ–±–ª–∞—Å—Ç—å: ").strip()
        }
        contact['full_name'] = f"{contact['first_name']} {contact['last_name']}"

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
        if any(c['phone'] == contact['phone'] for c in self.contacts):
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: –∫–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {contact['phone']} –≤–∂–µ —ñ—Å–Ω—É—î!")
            return

        self.contacts.append(contact)
        print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∏–π!")

    def search_by(self, field: str, value: str) -> List[Dict]:
        """–®—É–∫–∞—î –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –ø–æ–ª–µ–º."""
        results = []
        for contact in self.contacts:
            if value.lower() in contact.get(field, '').lower():
                results.append(contact)
        return results

    def display_contacts(self, contacts: List[Dict]):
        """–í–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ —É —á–∏—Ç–∞–±–µ–ª—å–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ."""
        if not contacts:
            print("\nüîç –ö–æ–Ω—Ç–∞–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            return

        print("\n" + "üìã –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ü–û–®–£–ö–£ " + "‚Äï" * 50)
        for i, contact in enumerate(contacts, 1):
            print(f"‚îÇ {i}. {contact['full_name']}")
            print(f"‚îÇ üìû –¢–µ–ª–µ—Ñ–æ–Ω: {contact['phone']}")
            print(f"‚îÇ üèô –ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è: {contact['city']}, {contact['state']}")
            print("‚îú" + "‚Äï" * 60)

    def delete_contact(self, phone: str):
        """–í–∏–¥–∞–ª—è—î –∫–æ–Ω—Ç–∞–∫—Ç –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É."""
        for i, contact in enumerate(self.contacts):
            if contact['phone'] == phone:
                del self.contacts[i]
                print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {phone} –≤–∏–¥–∞–ª–µ–Ω–∏–π!")
                return
        print(f"‚ö†Ô∏è –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!")

    def update_contact(self, phone: str):
        """–û–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–∞–∫—Ç –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É."""
        for contact in self.contacts:
            if contact['phone'] == phone:
                print("\n" + "‚úèÔ∏è –û–ù–û–í–õ–ï–ù–ù–Ø –ö–û–ù–¢–ê–ö–¢–£ " + "‚Äï" * 40)
                print("‚îÇ (–ó–∞–ª–∏—à—Ç–µ –ø–æ–ª–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —â–æ–± –Ω–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏)\n")

                new_first = input(f"‚îÇ –Ü–º'—è [{contact['first_name']}]: ").strip()
                new_last = input(f"‚îÇ –ü—Ä—ñ–∑–≤–∏—â–µ [{contact['last_name']}]: ").strip()
                new_phone = input(f"‚îÇ –¢–µ–ª–µ—Ñ–æ–Ω [{contact['phone']}]: ").strip()
                new_city = input(f"‚îÇ –ú—ñ—Å—Ç–æ [{contact['city']}]: ").strip()
                new_state = input(f"‚îÇ –®—Ç–∞—Ç/–æ–±–ª–∞—Å—Ç—å [{contact['state']}]: ").strip()

                if new_first:
                    contact['first_name'] = new_first
                if new_last:
                    contact['last_name'] = new_last
                if new_phone and new_phone != phone:
                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å –Ω–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä—É
                    if any(c['phone'] == new_phone for c in self.contacts):
                        print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: —Ü–µ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è!")
                        return
                    contact['phone'] = new_phone
                if new_city:
                    contact['city'] = new_city
                if new_state:
                    contact['state'] = new_state

                contact['full_name'] = f"{contact['first_name']} {contact['last_name']}"
                print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π!")
                return

        print(f"‚ö†Ô∏è –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!")


def display_menu():
    """–í–∏–≤–æ–¥–∏—Ç—å –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–∏."""
    print("\n" + "=" * 60)
    print("üìñ –¢–ï–õ–ï–§–û–ù–ù–ê –ö–ù–ò–ì–ê".center(60))
    print("=" * 60)
    print("1. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç")
    print("2. –ü–æ—à—É–∫ –∑–∞ —ñ–º'—è–º")
    print("3. –ü–æ—à—É–∫ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º")
    print("4. –ü–æ—à—É–∫ –∑–∞ –ø–æ–≤–Ω–∏–º —ñ–º'—è–º")
    print("5. –ü–æ—à—É–∫ –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É")
    print("6. –ü–æ—à—É–∫ –∑–∞ –º—ñ—Å—Ç–æ–º –∞–±–æ —à—Ç–∞—Ç–æ–º")
    print("7. –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç")
    print("8. –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç")
    print("9. –í–∏–π—Ç–∏ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏")
    print("=" * 60)


def main():
    import sys

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —ñ–º'—è —Ñ–∞–π–ª—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏
    filename = sys.argv[1] if len(sys.argv) > 1 else "noname.json"
    phone_book = PhoneBook(filename)

    while True:
        display_menu()
        try:
            choice = input("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (1-9): ").strip()

            if choice == '1':
                phone_book.add_contact()

            elif choice in ['2', '3', '4', '5', '6']:
                fields = {
                    '2': 'first_name',
                    '3': 'last_name',
                    '4': 'full_name',
                    '5': 'phone',
                    '6': 'city'
                }
                field = fields[choice]
                search_prompt = {
                    '2': "—ñ–º'—è",
                    '3': "–ø—Ä—ñ–∑–≤–∏—â–µ",
                    '4': "–ø–æ–≤–Ω–µ —ñ–º'—è",
                    '5': "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É",
                    '6': "–º—ñ—Å—Ç–æ –∞–±–æ —à—Ç–∞—Ç"
                }[choice]
                value = input(f"–í–≤–µ–¥—ñ—Ç—å {search_prompt} –¥–ª—è –ø–æ—à—É–∫—É: ").strip()
                results = phone_book.search_by(field, value)
                phone_book.display_contacts(results)

            elif choice == '7':
                phone = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ").strip()
                phone_book.delete_contact(phone)

            elif choice == '8':
                phone = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ").strip()
                phone_book.update_contact(phone)

            elif choice == '9':
                phone_book.save_phone_book()
                print("\n" + "=" * 60)
                print("üìö –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!".center(60))
                print("=" * 60)
                break

            else:
                print("‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 9.")

        except KeyboardInterrupt:
            print("\nüìö –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            phone_book.save_phone_book()
            break
        except Exception as e:
            print(f"‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")


if __name__ == "__main__":
    main()
